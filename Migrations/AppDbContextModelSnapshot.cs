// <auto-generated />
using System;
using GestionEtudiant;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionEtudiant.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EtudiantModule", b =>
                {
                    b.Property<int>("EtudiantsId")
                        .HasColumnType("int");

                    b.Property<int>("ModulesId")
                        .HasColumnType("int");

                    b.HasKey("EtudiantsId", "ModulesId");

                    b.HasIndex("ModulesId");

                    b.ToTable("EtudiantModule");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Activite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapitreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EdudiantId")
                        .HasColumnType("int");

                    b.Property<int?>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChapitreId");

                    b.HasIndex("EtudiantId");

                    b.ToTable("Activites");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Chapitre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Chapitres");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Etudiant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Etudiants");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Filiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filieres");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FiliereId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemestreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("SemestreId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActiviteId")
                        .HasColumnType("int");

                    b.Property<string>("question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActiviteId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Reponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("reponse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Reponses");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Semestre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Semestres");
                });

            modelBuilder.Entity("EtudiantModule", b =>
                {
                    b.HasOne("GestionEtudiant.Repository.Etudiant", null)
                        .WithMany()
                        .HasForeignKey("EtudiantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEtudiant.Repository.Module", null)
                        .WithMany()
                        .HasForeignKey("ModulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Activite", b =>
                {
                    b.HasOne("GestionEtudiant.Repository.Chapitre", "Chapitre")
                        .WithMany("Activites")
                        .HasForeignKey("ChapitreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEtudiant.Repository.Etudiant", "Etudiant")
                        .WithMany("Activites")
                        .HasForeignKey("EtudiantId");

                    b.Navigation("Chapitre");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Chapitre", b =>
                {
                    b.HasOne("GestionEtudiant.Repository.Module", "Module")
                        .WithMany("Chapitres")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Module", b =>
                {
                    b.HasOne("GestionEtudiant.Repository.Filiere", "Filieres")
                        .WithMany("Modules")
                        .HasForeignKey("FiliereId");

                    b.HasOne("GestionEtudiant.Repository.Semestre", "Semestre")
                        .WithMany("Modules")
                        .HasForeignKey("SemestreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filieres");

                    b.Navigation("Semestre");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Question", b =>
                {
                    b.HasOne("GestionEtudiant.Repository.Activite", "Activite")
                        .WithMany("Questions")
                        .HasForeignKey("ActiviteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activite");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Reponse", b =>
                {
                    b.HasOne("GestionEtudiant.Repository.Question", "Question")
                        .WithOne("Reponse")
                        .HasForeignKey("GestionEtudiant.Repository.Reponse", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Activite", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Chapitre", b =>
                {
                    b.Navigation("Activites");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Etudiant", b =>
                {
                    b.Navigation("Activites");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Filiere", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Module", b =>
                {
                    b.Navigation("Chapitres");
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Question", b =>
                {
                    b.Navigation("Reponse")
                        .IsRequired();
                });

            modelBuilder.Entity("GestionEtudiant.Repository.Semestre", b =>
                {
                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
